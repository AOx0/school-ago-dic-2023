
Elaborar un programa en flex que copie el archivo de entrada en uno de salida, sumando 5 a todo número positivo que sea múltiplo  de 4.
Ejemplo
Entrada.txt
1
2
3
4
5
6
7
8
9
10
11
12
Salida.txt
1
2
3
9
5
6
7
13
9
10
11
17

Elabora un programa en flex que copie el archivo de entrada en uno de salida, sumando N1 a todo número positivo que sea múltiplo de N2, donde N1 y N2 son dos números pasados como argumentos desde la línea de comandos.
Elaborar un programa de flex que reciba un archivo de texto  y cuente el número de caracteres, palabras y líneas que contiene.
Elaborar un programa flex que reciba un archivo de texto y una palabra y cuente el número veces que aparece dicha palabra en el archivo.
Elabora un analizador que reemplace una palabra por otra en un archivo de entrada. Ambas palabras, así como el nombre del archivo deberán ser introducidos por el usuario, bien a través de la línea de comandos o cuando el usuario ejecute el programa.
Elabora un analizador léxico que permita reconocer  los componentes léxicos de un programa escrito en pseudocódigo.

Palabras reservadas:
inicio, fin, mod, o, y, no, leer, escribir, si, entonces,	si_no, fin_si, mientras, hacer, fin_mientras, repetir, hasta_que, para, desde, hasta, paso, fin_para.
No se distinguirá entre mayúsculas ni minúsculas.
Las	palabras	reservadas	no	se	podrán	utilizar	como identificadores.
Identificador:
Estarán compuestos por una serie de letras, dígitos y el subrayado
Deben comenzar por una letra.
No podrán terminar con el símbolo de subrayado, ni tener dos subrayados consecutivos.
No se distinguirá entre mayúsculas ni minúsculas.
Números
Se utilizarán números enteros, reales de punto fijo y reales con notación científica.
Todos ellos serán tratados conjuntamente como números.
Cadenas
Estarán compuesta por una serie de caracteres delimitados por comillas simples:
‘Ejemplo de cadena’
Deberá permitir la inclusión de la comilla simple utilizando la barra (\):
‘Ejemplo de cadena con \’ comillas\’ simples’.
Las comillas exteriores no formarán parte de la cadena.
Operador de asignación :=
Operadores aritméticos:
Suma:	+
Diferencia:	-
Producto: *
División:	/
Resto de la división entera:	mod
Potencia:	**
Operadores relacionales::
Menor: 	<
Menor o igual: <=
Mayor:	>
Mayor o igual: >=
Igual:	==
Desigual:	<>
Operadores lógicos:

Disyunción: o
Conjunción: y
Negación: no
Ejemplo: (A>=0) y  no(control<>’stop’)


Comentarios pueden

De varias líneas: delimitados por (* y *)
De una línea todo lo que siga al carácter # hasta el final de la línea.
Otro componentes léxicos
Fin de instrucción y separador con el símbolo ;
Paréntesis  izquierdo ( y  derecho )
Verificar de errores siguientes:
Identificador mal escrito.
Números mal escritos.
Utilización de símbolos no permitidos.

